name: Build AAB from PWA

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      WEB_MANIFEST_URL: https://picnic-3.onrender.com/manifest.json
      HOST_NAME: picnic-3.onrender.com
      PACKAGE_ID: com.onrender.picnic3.twa
      APP_NAME: Picnic Vakti
      LAUNCHER_NAME: Picnic
      START_URL: /
      THEME_COLOR: "#FF6600"
      BG_COLOR: "#FFFFFF"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Bubblewrap CLI (pinned)
        run: npm i -g @bubblewrap/cli@1.24.1

      # ---- Keystore'u Secrets'tan çıkar (ZORUNLU: SIGNING_KEYSTORE_BASE64) ----
      - name: Restore signing.keystore
        shell: bash
        run: |
          set -euo pipefail
          test -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" || { echo "Missing SIGNING_KEYSTORE_BASE64"; exit 1; }
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > signing.keystore
          test -s signing.keystore || { echo "signing.keystore could not be created"; exit 1; }
          echo "✅ Keystore restored (size: $(stat -c%s signing.keystore) bytes)"

      - name: Configure Bubblewrap paths
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.bubblewrap
          cat > ~/.bubblewrap/config.json <<JSON
          { "jdkPath": "${{ env.JAVA_HOME }}", "androidSdkPath": "/usr/local/lib/android/sdk" }
          JSON

      # ---- prompt gerektirmeyen TWA manifestini oluştur ----
      - name: Create twa-manifest.json
        shell: bash
        run: |
          set -euo pipefail
          cat > twa-manifest.json <<JSON
          {
            "packageId": "${PACKAGE_ID}",
            "host": "${HOST_NAME}",
            "name": "${APP_NAME}",
            "launcherName": "${LAUNCHER_NAME}",
            "display": "standalone",
            "themeColor": "${THEME_COLOR}",
            "backgroundColor": "${BG_COLOR}",
            "startUrl": "${START_URL}",
            "fallbackType": "customtabs",
            "enableNotifications": false,
            "appVersionName": "1.0.0",
            "appVersionCode": 1,
            "minSdkVersion": 19,
            "webManifestUrl": "${WEB_MANIFEST_URL}",
            "iconUrl": "https://picnic-3.onrender.com/static/icons/icon-512.png",
            "maskableIconUrl": "https://picnic-3.onrender.com/static/icons/icon-512.png"
          }
          JSON
          echo "twa-manifest.json written:"
          cat twa-manifest.json

      # ---- TWA init (tamamen non-interactive) ----
      - name: Init TWA from twa-manifest.json (no prompts)
        shell: bash
        run: |
          set -euo pipefail
          npx bubblewrap init \
            --manifest=twa-manifest.json \
            --directory . \
            --skipPwaValidation \
            --no-input
          echo "✅ bubblewrap init finished."

      # ---- İmzalı AAB build ----
      - name: Build signed AAB
        shell: bash
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euo pipefail
          npx bubblewrap build \
            --no-input \
            --signingKey="$GITHUB_WORKSPACE/signing.keystore" \
            --signingKeyAlias="${KEY_ALIAS:-upload}" \
            --keyStorePassword="${KEYSTORE_PASSWORD:-picnic123}" \
            --signingKeyPassword="${KEY_PASSWORD:-picnic123}"
          echo "✅ AAB built."

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: picnic-aab
          path: "**/*.aab"
