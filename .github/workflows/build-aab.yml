name: Build AAB from PWA

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bubblewrap CLI (pin)
        run: npm i -g @bubblewrap/cli@1.24.1

      # Keystore'u secret'tan geri yükle (zorunlu)
      - name: Restore signing.keystore from secrets
        shell: bash
        run: |
          test -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" || { echo "Missing SIGNING_KEYSTORE_BASE64 secret"; exit 1; }
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > signing.keystore
          test -s signing.keystore || { echo "signing.keystore could not be created"; exit 1; }
          echo "✅ Keystore restored (size: $(stat -c%s signing.keystore) bytes)"

      # Yerel TWA manifest ile, interaktif soruları tamamen kapatarak init
            - name: Init TWA from local WEB manifest (no prompts)
        shell: bash
        run: |
          set -euo pipefail

          echo "🧩 Checking WEB manifest file..."
          if [ ! -f static/manifest.json ]; then
            echo "❌ static/manifest.json bulunamadı!"
            ls -la static || true
            exit 1
          fi

          echo "✅ WEB manifest bulundu, başlatılıyor..."

          # Bubblewrap config (JDK + Android SDK)
          mkdir -p ~/.bubblewrap
          cat > ~/.bubblewrap/config.json <<JSON
          {
            "jdkPath": "${{ env.JAVA_HOME }}",
            "androidSdkPath": "/usr/local/lib/android/sdk"
          }
          JSON

          echo "🚀 Running Bubblewrap init (non-interactive)..."
          npx bubblewrap init \
            --manifest=static/manifest.json \
            --directory . \
            --skipPwaValidation \
            --no-input \
            --host=picnic-3.onrender.com \
            --applicationId=com.onrender.picnic_3.twa \
            --name="Picnic Vakti" \
            --launcherName="Picnic" \
            --startUrl="/" \
            --display="standalone" \
            --fallbackType="customtabs" \
            --iconUrl="https://picnic-3.onrender.com/static/icons/icon-512.png" \
            --maskableIconUrl="https://picnic-3.onrender.com/static/icons/icon-512.png"

          echo "✅ TWA initialized successfully."

echo "✅ Keystore restored ..."
# ↓
- name: Init TWA from local WEB manifest (no prompts)
  shell: bash
  run: |
    set -euo pipefail
    ...
