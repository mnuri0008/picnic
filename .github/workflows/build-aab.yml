name: Build AAB from PWA

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  MANIFEST_URL: https://picnic-3.onrender.com/manifest.json

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bubblewrap CLI (pin 1.24.1)
        run: npm i -g @bubblewrap/cli@1.24.1

      - name: Restore signing.keystore from secrets
        shell: bash
        run: |
          set -euo pipefail
          test -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" || { echo "Missing SIGNING_KEYSTORE_BASE64 secret"; exit 1; }
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > signing.keystore
          test -s signing.keystore || { echo "signing.keystore could not be created"; exit 1; }
          echo "Keystore restored (size: $(stat -c%s signing.keystore) bytes)"

      - name: Init TWA from WEB manifest (no prompts)
        shell: bash
        run: |
          set -euo pipefail

          echo "Checking manifest URL: ${{ env.MANIFEST_URL }}"
          code=$(curl -sSIL -o /dev/null -w '%{http_code}' "${{ env.MANIFEST_URL }}")
          test "$code" = "200" || { echo "Manifest not reachable (HTTP $code)"; exit 1; }

          # JSON sanity (ilk karakter '{' olsun)
          headchar=$(curl -fsSL "${{ env.MANIFEST_URL }}" | tr -d '\r\n' | sed 's/^[ \t]*//' | cut -c1)
          test "$headchar" = "{" || { echo "Manifest is not JSON (did server return HTML/error page?)"; exit 1; }

          # Bubblewrap config
          mkdir -p ~/.bubblewrap
          cat > ~/.bubblewrap/config.json <<EOF
          { "jdkPath": "${JAVA_HOME}", "androidSdkPath": "/usr/local/lib/android/sdk" }
          EOF

          # Tamamen non-interaktif init
          npx bubblewrap init \
            --manifest="${{ env.MANIFEST_URL }}" \
            --directory . \
            --skipPwaValidation \
            --no-input \
            --host=picnic-3.onrender.com \
            --applicationId=com.picnic3.onrender \
            --name="Picnic Vakti" \
            --launcherName="Picnic" \
            --startUrl="/" \
            --display="standalone" \
            --fallbackType=customtabs \
            --iconUrl="https://picnic-3.onrender.com/static/icons/icon-512.png" \
            --maskableIconUrl="https://picnic-3.onrender.com/static/icons/icon-512.png"

      - name: Build signed AAB
        shell: bash
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euo pipefail
          npx bubblewrap build \
            --signingKey=signing.keystore \
            --signingKeyAlias="${KEY_ALIAS:-upload}" \
            --signingKeyPassword="${KEY_PASSWORD:-picnic123}" \
            --keyStorePassword="${KEYSTORE_PASSWORD:-picnic123}"

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: picnic-aab
          path: "**/*.aab"
