name: Build AAB from PWA

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Bubblewrap CLI
        run: npm i -g @bubblewrap/cli

      # --- Keystore'u secrets'tan geri yÃ¼kle ---
      - name: Restore signing.keystore from secrets
        shell: bash
        run: |
          set -euo pipefail
          test -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" || { echo "Missing SIGNING_KEYSTORE_BASE64 secret"; exit 1; }
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > signing.keystore
          test -s signing.keystore || { echo "signing.keystore could not be created"; exit 1; }
          echo "Keystore restored (size: $(stat -c%s signing.keystore) bytes)"

      # --- TWA init (etkileÅŸimsiz) ---
      - name: Prepare and Init TWA (non-interactive, skip validation)
        shell: bash
        run: |
          set -euo pipefail
          echo "ðŸ“¦ Preparing Bubblewrap config..."
          mkdir -p ~/.bubblewrap
          cat > ~/.bubblewrap/config.json <<EOF
          {
            "jdkPath": "$JAVA_HOME",
            "androidSdkPath": "/usr/local/lib/android/sdk"
          }
          EOF

          echo "ðŸš€ Initializing TWA from manifest file..."
          # Repodaki twa-manifest.json dosyasÄ±nÄ± kullanÄ±yoruz
          npx bubblewrap init --manifest=twa-manifest.json --directory . --skipPwaValidation --no-input
          echo "âœ… TWA initialization complete."

      # --- Ä°mzalÄ± AAB build ---
      - name: Build signed AAB
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        shell: bash
        run: |
          set -euo pipefail
          npx bubblewrap build \
            --signingKey=signing.keystore \
            --signingKeyAlias="${KEY_ALIAS:-upload}" \
            --signingKeyPassword="${KEY_PASSWORD:-picnic123}" \
            --keyStorePassword="${KEYSTORE_PASSWORD:-picnic123}"

      # --- OluÅŸan .aab'Ä± artefact olarak yÃ¼kle ---
      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: picnic-aab
          path: "**/*.aab"
