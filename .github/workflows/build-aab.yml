name: Build Android AAB (Capacitor – no prompts)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_ID: com.onrender.picnic3
      APP_NAME: "Picnic Vakti"
      SITE_URL: https://picnic-3.onrender.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Capacitor toolchain
        run: |
          npm i -g npm@10
          mkdir mobile && cd mobile
          npm init -y
          npm i @capacitor/core @capacitor/cli @capacitor/android

      - name: Create Capacitor config (points to your live site)
        working-directory: mobile
        run: |
          cat > capacitor.config.json <<JSON
          {
            "appId": "${APP_ID}",
            "appName": "${APP_NAME}",
            "webDir": "dist",
            "bundledWebRuntime": false,
            "server": {
              "url": "${SITE_URL}",
              "cleartext": false
            }
          }
          JSON
          # dummy dist (gerekmiyor ama cli şikayet etmesin)
          mkdir -p dist
          echo "<html><body>Capacitor shell</body></html>" > dist/index.html

      - name: Add Android platform (no prompts)
        working-directory: mobile
        run: |
          npx cap add android
          # Android SDK yolu bubblewrap olmadan da hazır
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV

      # ---- Keystore'u secrets'tan çıkar ----
      - name: Restore signing keystore
        working-directory: mobile/android/app
        shell: bash
        run: |
          set -euo pipefail
          test -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" || { echo "Missing SIGNING_KEYSTORE_BASE64"; exit 1; }
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > upload.keystore
          test -s upload.keystore || { echo "upload.keystore could not be created"; exit 1; }
          echo "✅ Keystore restored (size: $(stat -c%s upload.keystore) bytes)"

      # ---- Gradle'a release imzasını enjekte et ----
      - name: Configure Gradle signing for release
        working-directory: mobile/android/app
        shell: bash
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euo pipefail
          BGF=build.gradle
          echo "Patching $BGF for release signing..."
          # signingConfigs.release bloğu yoksa ekleyelim:
          awk '
            BEGIN{added=0}
            /android \{/ && added==0 {
              print; print "    signingConfigs {"; 
              print "        release {"; 
              print "            storeFile file(\"upload.keystore\")"; 
              print "            storePassword System.getenv(\"KEYSTORE_PASSWORD\")"; 
              print "            keyAlias System.getenv(\"KEY_ALIAS\")"; 
              print "            keyPassword System.getenv(\"KEY_PASSWORD\")"; 
              print "        }"; 
              print "    }"; 
              next
            }
            /buildTypes \{/ && added==0 {
              print; 
              print "        release {"; 
              print "            signingConfig signingConfigs.release"; 
              print "            minifyEnabled false"; 
              print "            shrinkResources false"; 
              print "        }";
              added=1; 
              next
            }
            {print}
          ' "$BGF" > tmp.gradle && mv tmp.gradle "$BGF"
          echo "✅ Gradle signing patch done."

      # ---- AAB derle ----
      - name: Build AAB (bundleRelease)
        working-directory: mobile/android
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          set -euo pipefail
          ./gradlew --no-daemon clean bundleRelease
          ls -lah app/build/outputs/bundle/release

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: picnic-capacitor-aab
          path: mobile/android/app/build/outputs/bundle/release/*.aab
