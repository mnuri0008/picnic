name: Build AAB from PWA

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bubblewrap CLI (pin 1.24.1)
        run: npm i -g @bubblewrap/cli@1.24.1

      - name: Restore signing.keystore from secrets
        shell: bash
        run: |
          set -euo pipefail
          test -n "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" || { echo "Missing SIGNING_KEYSTORE_BASE64 secret"; exit 1; }
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > signing.keystore
          test -s signing.keystore || { echo "signing.keystore could not be created"; exit 1; }
          echo "✅ Keystore restored (size: $(stat -c%s signing.keystore) bytes)"

      - name: Init TWA from local WEB manifest (no prompts)
        shell: bash
        run: |
          set -euo pipefail

          echo "🧩 Checking WEB manifest file..."
          test -f static/manifest.json || { echo "❌ static/manifest.json bulunamadı!"; ls -la static || true; exit 1; }
          echo "✅ WEB manifest bulundu."

          # Bubblewrap config (JDK + Android SDK)
          mkdir -p ~/.bubblewrap
          cat > ~/.bubblewrap/config.json <<JSON
          {
            "jdkPath": "${{ env.JAVA_HOME }}",
            "androidSdkPath": "/usr/local/lib/android/sdk"
          }
          JSON

          echo "🚀 Running Bubblewrap init (non-interactive)…"
          npx bubblewrap init \
            --manifest=static/manifest.json \
            --directory . \
            --skipPwaValidation \
            --no-input \
            --host=picnic-3.onrender.com \
            --applicationId=com.onrender.picnic3.twa \
            --name="Picnic Vakti" \
            --launcherName="Picnic" \
            --startUrl="/" \
            --display="standalone" \
            --fallbackType="customtabs"

          echo "✅ TWA initialized."

      - name: Build signed AAB
        shell: bash
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          npx bubblewrap build \
            --signingKey=signing.keystore \
            --signingKeyAlias="${KEY_ALIAS:-upload}" \
            --signingKeyPassword="${KEY_PASSWORD:-picnic123}" \
            --keyStorePassword="${KEYSTORE_PASSWORD:-picnic123}"

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: picnic-aab
          path: "**/*.aab"
